# most common used
# Windows
title coordinator
set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n
mvn hpi:run -Djetty.port=8090 -Dhpi.prefix=/jenkins

# Mac
export MAVEN_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n"
mvn hpi:run -Djetty.port=8090 -Dhpi.prefix=/jenkins

# Runnning Maven with JRebel
# set MAVEN_OPTS=-javaagent:/path/to/jrebel.jar -XX:MaxPermSize=128m -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n
# Windows
title coordinator
set MAVEN_OPTS=-javaagent:D:/Dev/eclipse/jee/plugins/org.zeroturnaround.eclipse.embedder_6.4.5.RELEASE/jrebel/jrebel.jar -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n
mvn hpi:run -Djetty.port=8100 -Dhpi.prefix=/jenkins
mvn clean hpi:run -Djetty.port=8090 -Dhpi.prefix=/jenkins

# Mac
export MAVEN_OPTS="-javaagent:/Applications/jee.app/Contents/Eclipse/plugins/org.zeroturnaround.eclipse.embedder_6.4.5.RELEASE/jrebel/jrebel.jar -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n"
mvn hpi:run -Djetty.port=8100 -Dhpi.prefix=/jenkins
mvn clean hpi:run -Djetty.port=8090 -Dhpi.prefix=/jenkins


mvn eclipse:eclipse -DdownloadSource
# which would package the source into the target while install won't
mvn package -Dmaven.test.skip=true
mvn install -Dmaven.test.skip=true

#for download the source code
mvn dependency:sources
mvn dependency:resolve -Dclassifier=javadoc

mvn clean

# refer to doc in https://www.jenkins.io/doc/developer/publishing/releasing-manually/
# to get your password encrypted
# diff account settings use below, in  ~/.m2/settings.xml or $MAVEN_HOME/conf/settings.xml
  <servers>
    <server>
      <id>maven.jenkins-ci.org</id> <!-- For parent 1.397 or newer; before this use id java.net-m2-repository -->
      <username>ace_jl_han</username>  
      <password>YOUR_ENCRYPTED_PASSWORD</password> 
    </server>
  </servers>

# Do not split that Maven command into two separate Maven invocations (i. e. mvn release:prepare followed by mvn release:perform): It won't work as you expect and will mess up your release. Always execute the two Maven goals together, in one command.

mvn release:prepare release:perform

1. mvn release:prepare release:perform
2. release version and next new development version will be  interactively prompted during the process
